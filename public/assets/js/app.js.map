{"version":3,"sources":["app.js"],"names":[],"mappingsfile":"app.js","sourcesContent":["Architekt.event.on('ready', function() {\n\tArchitekt.module.Printer.setLevel(0);\n\n\t/* Common tasks */\n\t//Radio and check box label: on click, simulate click on input\n\t$('.pi-radio > label').click(function() {\n\t\t$(this).prev('input').trigger('click');\n\t});\n\t$('.pi-checkbox > label').click(function() {\n\t\t$(this).prev('input').trigger('click');\n\t});\n\n\n\t/* Create product */\n\tvar _isSubmittingCreateProduct = false;\n\tvar generated = false;\n\tvar token = '';\n\n\tfunction generateCode(type, lan, token) {\n\t\tlan = lan.toLowerCase();\n\n\t\tvar method = function() {};;\n\n\t\tswitch(type) {\n\t\t\tcase 'button':\n\t\t\t\tmethod = updateButton;\n\t\t\t\tbreak;\n\t\t\tcase 'link':\n\t\t\t\tmethod = updateLink;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('unsupported type ' + type);\n\t\t\t\tbreak;\n\t\t}\n\n\t\t//update dom\n\t\tmethod.apply(null, [].slice.call(arguments, 1));\n\t}\n\tfunction updateButton(lan, token) {\n\t\tif(typeof token === 'undefined' || token === \"\") return;\n\n\t\tvar buttonText = null;\n\n\t\tswitch(lan) {\n\t\t\tcase 'en':\n\t\t\t\tbuttonText = 'Pay with PI';\n\t\t\t\tbreak;\n\t\t\tcase 'ko':\n\t\t\t\tbuttonText = '파이결제';\n\t\t\t\tbreak;\n\t\t}\n\n\t\t$('#pi_generated').val('<a href=\"#\" class=\"pi-payment-button\" data-token=\"' + token + '\" data-lang=\"' + lan + '\" data-btn=\"0\" data-livemode=\"1\"><img src=\"/image/pi-payment-logo.png\" /><span>' + buttonText + '</span></a>');\n\t}\n\tfunction updateLink(lan, token) {\n\t\tif(typeof token === 'undefined' || token === \"\") return;\n\n\t\tvar currentUrl = location.protocol + \"//\" + location.host;\n\t\t$('#pi_generated').val(currentUrl + '/checkout/' + token + '?lang=' + lan + '&livemode=1');\n\t}\n\n\t//submit generate product\n\t$('#createProductForm').submit(function() {\n\t\tif(generated) return false;;\n\t\tif(_isSubmittingCreateProduct) return false;;\n\n\t\tvar url = $(this).attr('action');\n\t\tvar Notice = Architekt.module.Widget.Notice;\n\t\tvar Validator = Architekt.module.Validator;\n\n\t\t//validations\n\t\tvar itemDesc = $('#item_desc');\n\t\tvar orderId = $('#order_id');\n\t\tvar amount = $('#amount');\n\t\tvar email = $('#email');\n\t\tvar redirectUrl = $('#redirect');\n\t\tvar ipn = $('#ipn');\n\n\t\tfunction _error(text, focus, reset) {\n\t\t\tnew Notice({\n\t\t\t\ttext: text,\n\t\t\t\tcallback: function() {\n\t\t\t\t\tfocus.focus();\n\n\t\t\t\t\tif(reset) reset.val('');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t/* check empty */\n\t\tif(!itemDesc.val()) {\n\t\t\t_error('상품명을 입력해주세요.', itemDesc);\n\t\t\treturn false;\n\t\t}\n\t\telse if(!amount.val()) {\n\t\t\t_error('상품 가격을 입력해주세요.', amount);\n\t\t\treturn false;\n\t\t}\n\n\t\t/* data format */\n\t\tif(itemDesc.val().length < 2) {\n\t\t\t_error('상품명은 2글자 이상으로 입력해주세요.', itemDesc);\n\t\t\treturn false;\n\t\t}\n\t\telse if(!Validator.checkIfNotEmpty('alphanumeric', orderId.val())) {\n\t\t\t_error('상품번호는 영문자와 숫자의 조합만 사용가능합니다.', orderId);\n\t\t\treturn false;\n\t\t}\n\t\telse if(!Validator.check('numeric', amount.val())) {\n\t\t\t_error('상품가격은 숫자로 입력해주세요.', amount);\n\t\t\treturn false;\n\t\t}\n\t\telse if(!Validator.checkIfNotEmpty('email', email.val())) {\n\t\t\t_error('이메일은 이메일 형식으로 입력해주세요!', email);\n\t\t\treturn false;\n\t\t}\n\t\telse if(!Validator.checkIfNotEmpty('url', redirectUrl.val())) {\n\t\t\t_error('결제 후 연결할 URL주소는 URL 형식으로 입력해주세요!', redirectUrl);\n\t\t\treturn false;\n\t\t}\n\t\telse if(!Validator.checkIfNotEmpty('url', ipn.val())) {\n\t\t\t_error('IPN은 URL 형식으로 입력해주세요!', ipn);\n\t\t\treturn false;\n\t\t}\n\n\t\t_isSubmittingCreateProduct = true;\n\n\t\t//Send POST request\n\t\tArchitekt.module.Http.post({\n\t\t\turl: url,\n\t\t\tdata: {\n\t\t\t\t'item_desc': itemDesc.val(),\n\t\t\t\t'order_id': orderId.val(),\n\t\t\t\tamount: amount.val(),\n\t\t\t\temail: email.val(),\n\t\t\t\tredirect: redirectUrl.val(),\n\t\t\t\tipn: ipn.val(),\n\t\t\t},\n\t\t\tsuccess: function(data) {\n\t\t\t\tvar cipher = data.crypt;\n\n\t\t\t\ttoken = cipher;\n\n\t\t\t\tgenerated = true;\n\t\t\t\tgenerateCode(window.generateType, 'ko', token);\n\n\t\t\t\t//scroll to bottom!\n\t\t\t\t$(\"html, body\").animate({ scrollTop: $(document).height() }, \"slow\");\n\t\t\t},\n\t\t\terror: function(text, status) {\n\t\t\t\tnew Notice({\n\t\t\t\t\ttext: (text + status).join(\", \"),\n\t\t\t\t});\n\t\t\t},\n\t\t\tcomplete: function() {\n\t\t\t\t_isSubmittingCreateProduct = false;\n\t\t\t}\n\t\t});\n\n\t\treturn false;\n\t});\n\t//change language\n\t$('.controlLan').click(function() {\n\t\tvar lan = $(this).val();\n\t\tgenerateCode('button', lan, token);\n\t});\n\t//if user clicked \"button\", make radio click\n\t$('.pi-payment-button').click(function() {\n\t\t$(this).prev().trigger('click');\n\t});\n\t//copy button\n\t$('#codeCopy').click(function() {\n\t\tvar generatedCode = $('#pi_generated');\n\n\t\tif(!generated || generated === \"\") return false;\n\n\t\tArchitekt.module.Clipboard.copy($('#pi_generated'));\n\n\t\tnew Architekt.module.Widget.Notice({\n\t\t\ttext: '복사되었습니다.',\n\t\t});\n\t});\n});"],"sourceRoot":"/source/"}